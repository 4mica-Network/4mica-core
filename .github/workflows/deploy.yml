name: CI/CD

on:
  push:
    branches: ["develop", "main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.85.0
          override: true

      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Start Docker Compose
        run: docker compose -f ./docker-compose.yml up -d

      - name: Check Prisma schema directory
        run: |
          if [ ! -f ./core/prisma/schema.prisma ]; then
            echo "Prisma schema file not found!"
            exit 1
          fi

      - name: Run Prisma Migrate
        run: cargo prisma migrate deploy --schema=./core/prisma/schema.prisma
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}

      - name: Check Prisma Module
        run: |
          if [ ! -f ./core/src/persist/prisma.rs ]; then
            echo "Prisma module file not found!"
            exit 1
          fi

      - name: Build workspace
        run: cargo build --release --workspace

      # - name: Run tests
      #   run: cargo test --workspace

  deploy-develop:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.STAGING_SSH_KEY }}

      - name: Deploy to staging server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_IP }} << 'EOF'
          cd /home/deploy/4mica-core || git clone git@github.com:4mica-Network/4mica-core.git /home/deploy/4mica-core
          cd /home/deploy/4mica-core
          git fetch origin develop
          git reset --hard origin/develop
          cargo build --release --workspace
          systemctl --user restart 4mica
          EOF

  deploy-main:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_KEY }}

      - name: Deploy to production server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PROD_USER }}@${{ secrets.PROD_IP }} << 'EOF'
          cd /home/deploy/4mica-core || git clone git@github.com:4mica-Network/4mica-core.git /home/deploy/4mica-core
          cd /home/deploy/4mica-core
          git fetch origin main
          git reset --hard origin/main
          cargo build --release --workspace
          systemctl --user restart 4mica
          EOF
