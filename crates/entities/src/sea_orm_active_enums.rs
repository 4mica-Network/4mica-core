//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "collateral_event_type"
)]
pub enum CollateralEventType {
    #[sea_orm(string_value = "DEPOSIT")]
    Deposit,
    #[sea_orm(string_value = "WITHDRAWAL")]
    Withdrawal,
    #[sea_orm(string_value = "RESERVE")]
    Reserve,
    #[sea_orm(string_value = "RELEASE")]
    Release,
    #[sea_orm(string_value = "REMUNERATE")]
    Remunerate,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "settlement_status")]
pub enum SettlementStatus {
    #[sea_orm(string_value = "PENDING")]
    Pending,
    #[sea_orm(string_value = "SETTLED")]
    Settled,
    #[sea_orm(string_value = "FAILED")]
    Failed,
    #[sea_orm(string_value = "MADEWHOLE")]
    Madewhole,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "tab_status")]
pub enum TabStatus {
    #[sea_orm(string_value = "OPEN")]
    Open,
    #[sea_orm(string_value = "CLOSED")]
    Closed,
}

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "withdrawal_status")]
pub enum WithdrawalStatus {
    #[sea_orm(string_value = "PENDING")]
    Pending,
    #[sea_orm(string_value = "EXECUTED")]
    Executed,
    #[sea_orm(string_value = "CANCELLED")]
    Cancelled,
}
